#!/usr/bin/env node
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading wasm modules
/******/ 	var installedWasmModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// object with all compiled WebAssembly.Modules
/******/ 	__webpack_require__.w = {};
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/bin/cli.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/bin/cli.ts":
/*!************************!*\
  !*** ./src/bin/cli.ts ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst process = __webpack_require__(/*! process */ \"process\");\nconst lib_1 = __webpack_require__(/*! ../lib */ \"./src/lib/index.ts\");\nconst utils_1 = __webpack_require__(/*! ../lib/utils */ \"./src/lib/utils/index.ts\");\nconst parameters = process.argv.slice(2);\nconst otherParameters = parameters.filter(p => !utils_1.startsWith(p, '-'));\nconst isPrettyFlag = utils_1.includesInArray(parameters, '--pretty');\nconst isVerboseFlag = utils_1.includesInArray(parameters, '--verbose');\nlet files = null;\nif (parseInt(process.version.match(/v(\\d+)\\./)[1], 10) < 4) {\n    console.error('standard: Node v4 or greater is required. `standard` did not run.');\n    process.exit(1);\n}\nif (otherParameters.length) {\n    files = utils_1.expend(otherParameters);\n}\nlet format = 'prose';\nif (isPrettyFlag) {\n    format = 'stylish';\n}\nelse if (isVerboseFlag) {\n    format = 'verbose';\n}\nlet callback = function (result) {\n    if (result.failureCount > 0) {\n        console.log(result.output);\n    }\n    return false;\n};\nlib_1.lint({ format, files, callback });\nif (isPrettyFlag) {\n    lib_1.pretty({ files });\n}\n\n\n//# sourceURL=webpack:///./src/bin/cli.ts?");

/***/ }),

/***/ "./src/lib/formatter/config.ts":
/*!*************************************!*\
  !*** ./src/lib/formatter/config.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = __webpack_require__(/*! ../utils */ \"./src/lib/utils/index.ts\");\nclass FormatterConfigParser {\n    option() {\n        const defaultTSFormatConfig = utils_1.findup('tsconfig.json');\n        if (!defaultTSFormatConfig) {\n            return null;\n        }\n        const options = utils_1.load(defaultTSFormatConfig);\n        return options.formatterOptions;\n    }\n}\nexports.FormatterConfigParser = FormatterConfigParser;\n\n\n//# sourceURL=webpack:///./src/lib/formatter/config.ts?");

/***/ }),

/***/ "./src/lib/formatter/formatter.ts":
/*!****************************************!*\
  !*** ./src/lib/formatter/formatter.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ts = __webpack_require__(/*! typescript */ \"typescript\");\nconst path = __webpack_require__(/*! path */ \"path\");\nconst index_1 = __webpack_require__(/*! ../utils/index */ \"./src/lib/utils/index.ts\");\nclass LanguageServiceHost {\n    constructor() {\n        this.files = {};\n        this.getCompilationSettings = () => ts.getDefaultCompilerOptions();\n        this.getScriptFileNames = () => Object.keys(this.files);\n        this.getScriptVersion = (_fileName) => '0';\n        this.getScriptSnapshot = (fileName) => this.files[fileName];\n        this.getCurrentDirectory = () => process.cwd();\n        this.getDefaultLibFileName = (options) => ts.getDefaultLibFilePath(options);\n    }\n    addFile(fileName, text) {\n        this.files[fileName] = ts.ScriptSnapshot.fromString(text);\n    }\n}\nexports.LanguageServiceHost = LanguageServiceHost;\nclass Formatter {\n    constructor(option) {\n        this.option = option;\n        if (ts.formatting.RulesProvider) {\n            this.ruleProvider = new ts.formatting.RulesProvider();\n            this.ruleProvider.ensureUpToDate(this.option);\n        }\n    }\n    static applyEdits(text, edits) {\n        let result = text;\n        for (let i = edits.length - 1; i >= 0; i--) {\n            const change = edits[i];\n            const head = result.slice(0, change.span.start);\n            const tail = result.slice(change.span.start + change.span.length);\n            result = head + change.newText + tail;\n        }\n        return result;\n    }\n    format(file) {\n        if (this.ruleProvider) {\n            return this.format22(file);\n        }\n        else {\n            return this.format27(file);\n        }\n    }\n    format27(file) {\n        const filename = path.basename(file);\n        let fileContent = index_1.loadText(file);\n        const host = new LanguageServiceHost();\n        host.addFile(filename, fileContent);\n        const languageService = ts.createLanguageService(host);\n        const edits = languageService.getFormattingEditsForDocument(filename, this.option);\n        edits\n            .sort((a, b) => a.span.start - b.span.start)\n            .reverse()\n            .forEach(edit => {\n            const head = fileContent.slice(0, edit.span.start);\n            const tail = fileContent.slice(edit.span.start + edit.span.length);\n            fileContent = `${head}${edit.newText}${tail}`;\n        });\n        if (edits.length) {\n            index_1.saveText(file, fileContent);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    format22(file) {\n        const filename = path.basename(file);\n        const fileContent = index_1.loadText(file);\n        const sourceFile = ts.createSourceFile(filename, fileContent, ts.ScriptTarget.Latest, true);\n        let edits;\n        if (this.ruleProvider) {\n            edits = ts.formatting.formatDocument(sourceFile, this.ruleProvider, this.option);\n        }\n        else {\n            edits = ts.formatting.formatDocument(sourceFile, this.option);\n        }\n        if (edits.length) {\n            const formatted = Formatter.applyEdits(fileContent, edits);\n            index_1.saveText(file, formatted);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}\nexports.Formatter = Formatter;\n\n\n//# sourceURL=webpack:///./src/lib/formatter/formatter.ts?");

/***/ }),

/***/ "./src/lib/index.ts":
/*!**************************!*\
  !*** ./src/lib/index.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validator_1 = __webpack_require__(/*! ../lib/validator */ \"./src/lib/validator/index.ts\");\nconst config_1 = __webpack_require__(/*! ./formatter/config */ \"./src/lib/formatter/config.ts\");\nconst formatter_1 = __webpack_require__(/*! ./formatter/formatter */ \"./src/lib/formatter/formatter.ts\");\nfunction lint(opts = {}) {\n    const parser = new validator_1.ValidatorConfigParser();\n    const files = opts.files && opts.files.length ? opts.files : parser.files();\n    const options = parser.options(opts.format || 'json');\n    if (files && files.length && options) {\n        const validator = new validator_1.Validator(options);\n        return files.map(function (file) {\n            const result = validator.validate(file);\n            if (opts.callback) {\n                const stop = opts.callback(result);\n                if (stop) {\n                    process.exit(2);\n                }\n            }\n            return result;\n        });\n    }\n    return [];\n}\nexports.lint = lint;\nfunction pretty(opts) {\n    const fileParser = new validator_1.ValidatorConfigParser();\n    const formatterConfigProvider = new config_1.FormatterConfigParser();\n    const files = opts.files && opts.files.length ? opts.files : fileParser.files();\n    const option = formatterConfigProvider.option();\n    const formatter = new formatter_1.Formatter(option);\n    if (files && files.length && formatter) {\n        return files.map(function (file) {\n            const formatted = formatter.format(file);\n            if (formatted) {\n                console.log(file, ': formatted');\n            }\n            return { file, format: formatted };\n        });\n    }\n    return [];\n}\nexports.pretty = pretty;\n\n\n//# sourceURL=webpack:///./src/lib/index.ts?");

/***/ }),

/***/ "./src/lib/utils/index.ts":
/*!********************************!*\
  !*** ./src/lib/utils/index.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = __webpack_require__(/*! path */ \"path\");\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst process = __webpack_require__(/*! process */ \"process\");\nconst glob = __webpack_require__(/*! glob */ \"glob\");\nconst currentPaths = __dirname.split(path.sep);\nconst cwdPaths = process.cwd();\nfunction findup(filename) {\n    let n = currentPaths.length;\n    while (n--) {\n        const folder = currentPaths.slice(0, n).join(path.sep);\n        const file = path.join(folder, filename);\n        try {\n            const stats = fs.statSync(file);\n            if (stats.isFile()) {\n                return file;\n            }\n        }\n        catch (err) {\n        }\n    }\n    return null;\n}\nexports.findup = findup;\nfunction isDirectory(file) {\n    const stats = fs.statSync(file);\n    return stats.isDirectory();\n}\nexports.isDirectory = isDirectory;\nfunction find(filename) {\n    const file = path.join(cwdPaths, filename);\n    const stats = fs.statSync(file);\n    if (stats.isFile()) {\n        return file;\n    }\n}\nexports.find = find;\nfunction load(file) {\n    const contents = fs.readFileSync(file, 'utf8');\n    try {\n        return JSON.parse(contents);\n    }\n    catch (err) {\n        console.error(`Can not parse json from ${file} because ${err.message}`);\n        return null;\n    }\n}\nexports.load = load;\nfunction loadText(file) {\n    return fs.readFileSync(file, 'utf8');\n}\nexports.loadText = loadText;\nfunction saveText(file, content) {\n    return fs.writeFileSync(file, content, { encoding: 'utf8' });\n}\nexports.saveText = saveText;\nfunction expend(files) {\n    let expended = [];\n    if (files && files.forEach) {\n        files.forEach(function (file) {\n            expended = expended.concat(glob.sync(path.resolve(cwdPaths, file)));\n        });\n    }\n    return expended;\n}\nexports.expend = expend;\nfunction includesInArray(arrayList, searchElement) {\n    const O = Object(arrayList);\n    const len = parseInt(O.length, 10) || 0;\n    if (len === 0) {\n        return false;\n    }\n    const n = parseInt(arguments[1], 10) || 0;\n    let k;\n    if (n >= 0) {\n        k = n;\n    }\n    else {\n        k = len + n;\n        if (k < 0) {\n            k = 0;\n        }\n    }\n    let currentElement;\n    while (k < len) {\n        currentElement = O[k];\n        if (searchElement === currentElement ||\n            (searchElement !== searchElement && currentElement !== currentElement)) {\n            return true;\n        }\n        k++;\n    }\n    return false;\n}\nexports.includesInArray = includesInArray;\nfunction startsWith(source, searchElement) {\n    return source.indexOf(searchElement) === 0;\n}\nexports.startsWith = startsWith;\n\n\n//# sourceURL=webpack:///./src/lib/utils/index.ts?");

/***/ }),

/***/ "./src/lib/validator/config.ts":
/*!*************************************!*\
  !*** ./src/lib/validator/config.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = __webpack_require__(/*! path */ \"path\");\nconst glob = __webpack_require__(/*! glob */ \"glob\");\nconst utils_1 = __webpack_require__(/*! ../utils */ \"./src/lib/utils/index.ts\");\nconst option_1 = __webpack_require__(/*! ./option */ \"./src/lib/validator/option.ts\");\nconst tslint_1 = __webpack_require__(/*! tslint */ \"tslint\");\nclass ValidatorConfigParser {\n    options(format) {\n        const defaultTSLintOptions = utils_1.findup('tslint.json');\n        if (!defaultTSLintOptions) {\n            return null;\n        }\n        const configuration = tslint_1.Linter.loadConfigurationFromPath(defaultTSLintOptions);\n        return new option_1.ValidatorOption(format, configuration);\n    }\n    files() {\n        const userTSConfig = utils_1.find('tsconfig.json');\n        if (!userTSConfig) {\n            return [];\n        }\n        const config = utils_1.load(userTSConfig);\n        const rootDir = path.dirname(userTSConfig);\n        let includes = [];\n        let excludes = [];\n        let excludeFiles = [];\n        let excludeFolders = [];\n        if (config.files && config.files.forEach) {\n            config.files.forEach(function (file) {\n                includes.push(path.join(rootDir, file));\n            });\n        }\n        if (config.include && config.include.forEach) {\n            config.include.forEach(function (file) {\n                if (file && (file.indexOf('*') >= 0 || file.indexOf('?') >= 0)) {\n                    includes = includes.concat(glob.sync(path.join(rootDir, file)));\n                }\n                else {\n                    includes.push(path.join(rootDir, file));\n                }\n            });\n        }\n        if (config.exclude && config.exclude.forEach) {\n            config.exclude.forEach(function (file) {\n                if (file && (file.indexOf('*') >= 0 || file.indexOf('?') >= 0)) {\n                    excludes = excludes.concat(glob.sync(path.join(rootDir, file)));\n                }\n                else {\n                    excludes.push(path.join(rootDir, file));\n                }\n            });\n            if (excludes.length) {\n                excludeFolders = excludes.filter(function (exclude) {\n                    return utils_1.isDirectory(exclude);\n                }).map(function (folder) {\n                    return path.join(folder, path.sep);\n                });\n                excludeFiles = excludes.filter(function (exclude) {\n                    if (utils_1.isDirectory(exclude)) {\n                        return false;\n                    }\n                    else {\n                        const matches = excludeFolders.filter(function (folder) {\n                            return utils_1.startsWith(exclude, folder);\n                        });\n                        return !matches.length;\n                    }\n                });\n            }\n        }\n        return includes.filter(function (file) {\n            if (utils_1.includesInArray(excludeFiles, file)) {\n                return false;\n            }\n            const matches = excludeFolders.filter(function (exclude) {\n                return utils_1.startsWith(file, exclude);\n            });\n            return !matches.length;\n        });\n    }\n}\nexports.ValidatorConfigParser = ValidatorConfigParser;\n\n\n//# sourceURL=webpack:///./src/lib/validator/config.ts?");

/***/ }),

/***/ "./src/lib/validator/format.ts":
/*!*************************************!*\
  !*** ./src/lib/validator/format.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ValidatorOutputFormat {\n    static getFormatter(formatter) {\n        if (formatter) {\n            return formatter;\n        }\n        else {\n            return 'json';\n        }\n    }\n}\nexports.ValidatorOutputFormat = ValidatorOutputFormat;\n\n\n//# sourceURL=webpack:///./src/lib/validator/format.ts?");

/***/ }),

/***/ "./src/lib/validator/index.ts":
/*!************************************!*\
  !*** ./src/lib/validator/index.ts ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validator_1 = __webpack_require__(/*! ./validator */ \"./src/lib/validator/validator.ts\");\nexports.Validator = validator_1.Validator;\nconst config_1 = __webpack_require__(/*! ./config */ \"./src/lib/validator/config.ts\");\nexports.ValidatorConfigParser = config_1.ValidatorConfigParser;\nconst option_1 = __webpack_require__(/*! ./option */ \"./src/lib/validator/option.ts\");\nexports.ValidatorOption = option_1.ValidatorOption;\n\n\n//# sourceURL=webpack:///./src/lib/validator/index.ts?");

/***/ }),

/***/ "./src/lib/validator/option.ts":
/*!*************************************!*\
  !*** ./src/lib/validator/option.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst format_1 = __webpack_require__(/*! ./format */ \"./src/lib/validator/format.ts\");\nclass ValidatorOption {\n    constructor(format, configuration) {\n        this.formatter = format_1.ValidatorOutputFormat.getFormatter(format);\n        this.configuration = configuration;\n    }\n    options() {\n        return {\n            fix: true,\n            formatter: this.formatter\n        };\n    }\n}\nexports.ValidatorOption = ValidatorOption;\n\n\n//# sourceURL=webpack:///./src/lib/validator/option.ts?");

/***/ }),

/***/ "./src/lib/validator/result.ts":
/*!*************************************!*\
  !*** ./src/lib/validator/result.ts ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ValidateResult {\n    constructor(result) {\n        this.failureCount = result.errorCount;\n        this.failures = result.failures;\n        this.format = result.format;\n        this.output = result.output;\n    }\n}\nexports.ValidateResult = ValidateResult;\n\n\n//# sourceURL=webpack:///./src/lib/validator/result.ts?");

/***/ }),

/***/ "./src/lib/validator/validator.ts":
/*!****************************************!*\
  !*** ./src/lib/validator/validator.ts ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslint_1 = __webpack_require__(/*! tslint */ \"tslint\");\nconst fs = __webpack_require__(/*! fs */ \"fs\");\nconst result_1 = __webpack_require__(/*! ./result */ \"./src/lib/validator/result.ts\");\nclass Validator {\n    constructor(validatorOption) {\n        this.validatorOption = validatorOption;\n    }\n    validate(file) {\n        if (!fs.existsSync(file)) {\n            console.error(`Unable to open file: ${file}`);\n            process.exit(1);\n        }\n        const contents = fs.readFileSync(file, 'utf8');\n        const linter = new tslint_1.Linter(this.validatorOption.options());\n        linter.lint(file, contents, this.validatorOption.configuration);\n        const results = linter.getResult();\n        return new result_1.ValidateResult(results);\n    }\n}\nexports.Validator = Validator;\n\n\n//# sourceURL=webpack:///./src/lib/validator/validator.ts?");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fs\");\n\n//# sourceURL=webpack:///external_%22fs%22?");

/***/ }),

/***/ "glob":
/*!***********************!*\
  !*** external "glob" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"glob\");\n\n//# sourceURL=webpack:///external_%22glob%22?");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"path\");\n\n//# sourceURL=webpack:///external_%22path%22?");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"process\");\n\n//# sourceURL=webpack:///external_%22process%22?");

/***/ }),

/***/ "tslint":
/*!*************************!*\
  !*** external "tslint" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"tslint\");\n\n//# sourceURL=webpack:///external_%22tslint%22?");

/***/ }),

/***/ "typescript":
/*!*****************************!*\
  !*** external "typescript" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"typescript\");\n\n//# sourceURL=webpack:///external_%22typescript%22?");

/***/ })

/******/ });